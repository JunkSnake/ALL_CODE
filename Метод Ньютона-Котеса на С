Метод Ньютона-Котса 
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
double function(double x) //подинтегральная функция
{
 return 7/((x*x)+1); //функция
}
int main() {
    double a,b,rez,semians,h,esp,arg;
    int i,n,counter;
    int kf[9][11] ={{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2},
                {2, 1, 4, 1, 0, 0, 0, 0, 0, 0, 6},
                {3, 1, 3, 3, 1, 0, 0, 0, 0, 0, 8},
                {4, 7, 32, 12, 32, 7, 0, 0, 0, 90},
                {5, 19, 75, 50, 50, 75, 19, 0, 0, 0, 288},
                {6, 41, 216, 27, 272, 27, 216, 41, 0, 0, 840},
                {7, 751, 3577, 1323, 2989, 2989, 1323, 3577, 751, 0, 17280},
                {8, 989, 5888, -928, 10496, - 4550, 10496, -928, 5888, 989, 28350}};
      
    printf("Введите A\n");
    scanf("%lf",&a);
     printf("Введите B \n");
    scanf("%lf",&b);
    printf("Введите точность\n");
    scanf("%d",&n);
    h = (b-a)/n;
    printf("Шаг h=%.3lf\n",h);
    
    printf("\nДля  x=%5.3lf  до  %5.3lf  с шагом  %5.3lf \n",a,b,h );
    counter=0;
    printf("\n   x      h         f            n");
    printf("\n--------------------------------------");
        for (i=0; i <= n; i++)
            {
                semians += function(a + i*h)*kf[n-1][i+1];
                counter=counter+1;
                printf("\n%5.3lf     %lf    %0.6lf     %d\n", a + i*h, i*h, function(a + i*h), counter);
            }
            printf("Cumm=%lf", semians);
            rez=((b-a)/kf[n-1][10])*semians;

    printf("Интеграл по методу трапеции= %.4lf\n",rez);
}
